public class SinglyLinkedList {
    private Node first; // the first Node
    //the first points to first node of the list
    //thats all the linkedlist knows about
    //next node knows about its next node
    // it only knows about the next node
    //one directional data structure
    // all it has the first node


    public SinglyLinkedList(){

    }

    public boolean isEmpty() {
        return (first == null);
    }

    //use to insert at the beginning of the list
    public void insertFirst(int data){
        Node newNode = new Node(); // create new node to insert as the first
        newNode.data = data; // newnode's data is the data
        newNode.next = first; // newnode's next field is the old first node
        first = newNode; // first node is now the newnode
    }

    public Node deleteFirst(){
        Node temp = first;
        first = first.next;
        return temp;

    }

    public void displayList(){
        System.out.println("list (first-->last) ");
        Node current = first;
        while(current != null){
            current.displayNode();
            current = current.next;
        }
        System.out.println();
    }

    public void insertLast(int data) {
        Node current = first;
        while(current.next != null){
            current = current.next; // we will loop until the current.next is null
            // when it becomes null, that means we reached the last node
            //then in the below, we create newNode with the given data
            // and then we assign the current node's next node to that new node
        }
        Node newNode = new Node();
        newNode.data = data;
        current.next = newNode;
    }

    //cannot go back.
    //only know the next node

}
